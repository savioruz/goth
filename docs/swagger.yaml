basePath: /v1
definitions:
  github_com_savioruz_goth_internal_dto_request.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  github_com_savioruz_goth_internal_dto_request.UserRegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_savioruz_goth_internal_dto_response.ErrorMsg:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  github_com_savioruz_goth_internal_dto_response.ErrorResponse:
    properties:
      errors:
        $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.ErrorMsg'
      request_id:
        type: string
    type: object
  github_com_savioruz_goth_internal_dto_response.Paging:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total_count:
        type: integer
      total_page:
        type: integer
    type: object
  github_com_savioruz_goth_internal_dto_response.Response-github_com_savioruz_goth_internal_dto_response_UserLoginResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.UserLoginResponse'
      pagination:
        $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.Paging'
    type: object
  github_com_savioruz_goth_internal_dto_response.Response-github_com_savioruz_goth_internal_dto_response_UserProfileResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.UserProfileResponse'
      pagination:
        $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.Paging'
    type: object
  github_com_savioruz_goth_internal_dto_response.Response-github_com_savioruz_goth_internal_dto_response_UserRegisterResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.UserRegisterResponse'
      pagination:
        $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.Paging'
    type: object
  github_com_savioruz_goth_internal_dto_response.UserLoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  github_com_savioruz_goth_internal_dto_response.UserProfileResponse:
    properties:
      email:
        type: string
      name:
        type: string
      profile_image:
        type: string
    type: object
  github_com_savioruz_goth_internal_dto_response.UserRegisterResponse:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample server Goth API.
  title: Goth API
  version: "1.0"
paths:
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User login request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_savioruz_goth_internal_dto_request.UserLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.Response-github_com_savioruz_goth_internal_dto_response_UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.ErrorResponse'
      summary: Login user
      tags:
      - user
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.Response-github_com_savioruz_goth_internal_dto_response_UserProfileResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: User register request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_savioruz_goth_internal_dto_request.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.Response-github_com_savioruz_goth_internal_dto_response_UserRegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_savioruz_goth_internal_dto_response.ErrorResponse'
      summary: Register new user
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
